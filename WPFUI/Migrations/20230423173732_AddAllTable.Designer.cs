// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PASEDM.Data;

#nullable disable

namespace PASEDM.Migrations
{
    [DbContext(typeof(PASEDMContext))]
    [Migration("20230423173732_AddAllTable")]
    partial class AddAllTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PASEDM.Data.DTOs.CardDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CaseID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfFormation")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentID")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentsID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("NumberCard")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int?>("RecipientID")
                        .HasColumnType("int");

                    b.Property<string>("SecrecyStamp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CaseID");

                    b.HasIndex("DocumentID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("RecipientID");

                    b.HasIndex("UserID");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.CaseDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Desription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberCase")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.DivisionDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberDivision")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.DocumentDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateOfFormation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RegistrationNumber")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("View")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.EmployeeDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("DivisionID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberEmployee")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DivisionID");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.RecipientDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("GenericTask")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberRecipient")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<DateTime>("TermOfExecution")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Recipients");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.UserDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.CardDTO", b =>
                {
                    b.HasOne("PASEDM.Data.DTOs.CaseDTO", "Case")
                        .WithMany("Cards")
                        .HasForeignKey("CaseID");

                    b.HasOne("PASEDM.Data.DTOs.DocumentDTO", "Document")
                        .WithMany("Cards")
                        .HasForeignKey("DocumentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PASEDM.Data.DTOs.EmployeeDTO", "Employee")
                        .WithMany("Cards")
                        .HasForeignKey("EmployeeID");

                    b.HasOne("PASEDM.Data.DTOs.RecipientDTO", "Recipient")
                        .WithMany("Cards")
                        .HasForeignKey("RecipientID");

                    b.HasOne("PASEDM.Data.DTOs.UserDTO", "User")
                        .WithMany("Cards")
                        .HasForeignKey("UserID");

                    b.Navigation("Case");

                    b.Navigation("Document");

                    b.Navigation("Employee");

                    b.Navigation("Recipient");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.EmployeeDTO", b =>
                {
                    b.HasOne("PASEDM.Data.DTOs.DivisionDTO", "Division")
                        .WithMany("Employee")
                        .HasForeignKey("DivisionID");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.RecipientDTO", b =>
                {
                    b.HasOne("PASEDM.Data.DTOs.UserDTO", "User")
                        .WithMany("Recipients")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.UserDTO", b =>
                {
                    b.HasOne("PASEDM.Data.DTOs.EmployeeDTO", "Employee")
                        .WithMany("Users")
                        .HasForeignKey("EmployeeID");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.CaseDTO", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.DivisionDTO", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.DocumentDTO", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.EmployeeDTO", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.RecipientDTO", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("PASEDM.Data.DTOs.UserDTO", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Recipients");
                });
#pragma warning restore 612, 618
        }
    }
}
